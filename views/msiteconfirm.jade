extend layoutm

block header
  // header section
  section.header-section
    span.title #{user.firstname} #{user.lastname}
    .container
      ul
        li
          a(href='/price/#{parcel.id}?m=1') 1. #{__('Price offers')}
        li
          span 2. #{__('Confirmation')}
        li
          a(href='#') 3. #{__('Payment')}
        li
          a(href='/dashboard?m=1') 4. #{__('Dashboard')}

block content
  // content
  section.section
    .confirmation
      .container
        .confirmation-selected
          h3 #{__('YOU HAVE SELECTED')}
          .confirmation-select-mobile
            select.js-select#driverSelection(onchange='selectDriver(this)')
              each dr in drivers
                option(driverId='#{dr.driver.id}', price='#{dr.driver.getPrice(parcel)}', delivery='#{dr.driver.getDeliveryPrice(parcel)}', postbox=dr.postbox, homeaddress=dr.homeaddress, selected=dr.driver.id == selected.id, deliveryType= dr.delivery) #{dr.title}, #{moneyString(dr.driver.getPrice(parcel))} &euro;
        hr
        .confirmation-delivery.plc
          h3 #{__('Departure and arrivals dates')}
          .confirmation-select-mobile
            //span.placeholder1 22.12.2015, 22:34
            //span.placeholder2 22.12.2015, 22:34
            input.change_placeholder.pl1(type='text', pattern='[0-9]*', inputmode='numeric', placeholder='#{moment().format("DD.MM.YYYY")}', value='#{moment(parcel.pickupDate).format("DD.MM.YYYY")}')
            input.change_placeholder.pl2(type='text', pattern='[0-9]*', inputmode='numeric', placeholder='#{moment().format("DD.MM.YYYY")}', value='#{moment(parcel.arriveDate).format("DD.MM.YYYY")}')
        hr
        .confirmation-departure
          h3 From:
          input#postbox(type='radio', name='adress-from', value='postbox')
          label.postbox#postboxLabel(for='postbox') #{__('Post office')}
          input#home(type='radio', name='adress-from', value='home', checked=true)
          label.home-adress#homeLabel(for='home') #{__('Home adress')}
          //input#post-office(type='radio', name='adress-from', value='post_office')
          //label.post-office(for='post-office') #{__('Post office')}
          .form-block
            .confirmation-select-mobile
              select.js-select#addressSelect1
                if parcel.fromPerson
                  option(value='#{parcel.fromPerson.latitude},#{parcel.fromPerson.longitude}') #{parcel.fromPersonAddress()}
                else
                  option(value='#{parcel.owner.latitude},#{parcel.owner.longitude}') #{parcel.ownerAddress()}
                each fromShop in fromShops
                  option(value='#{fromShop.latitude},#{fromShop.longitude}', parcelShopId='#{fromShop.parcelShopId}') #{fromShop.zipCode} #{fromShop.city} #{fromShop.street} #{fromShop.houseNo}
        .confirmation-destination
          h3 To:
          input#postbox2(type='radio', name='adress-to', value='postbox')
          label.postboxs#postboxLabel2(for='postbox2') #{__('Post office')}
          input#home2(type='radio', name='adress-to', value='home2', checked=true)
          label.home-adresss#homeLabel2(for='home2') #{__('Home adress')}
          //input#post-office1(type='radio', name='adress-to', value='post_office')
          //label.post-offices(for='post-office1') #{__('Post office')}
          .form-block
            .confirmation-select-mobile.confirmation-select-last
              select.js-select#addressSelect2
                if parcel.toPerson
                  option(value='#{parcel.toPerson.latitude},#{parcel.toPerson.longitude}') #{parcel.toPersonAddress()}
                else
                  option(value='#{parcel.owner.latitude},#{parcel.owner.longitude}') #{parcel.ownerAddress()}
                each toShop in toShops
                  option(value='#{toShop.latitude},#{toShop.longitude}', parcelShopId='#{toShop.parcelShopId}') #{toShop.zipCode} #{toShop.city} #{toShop.street} #{toShop.houseNo}
        hr
        .confirmation-confirm-title
          ul
            li
              | #{__('SENDING DETAILS:')}
              span #{parcel.weight}#{__('kg')}, #{parcel.width}#{__('cm')} x #{parcel.length}#{__('cm')} x #{parcel.depth}#{__('cm')}
            //li
              | #{__('INSURRANCE:')}
              span #{__('Standard')} (#{__('until')} #{parcel.insurance} &euro;)
            //li
              | #{__('DELIVERY OPTIONS:')}
              span +
              span#deliveryPrice #{moneyString(selected.getDeliveryPrice(parcel))}
              span &euro; #{__('to home adress')}
        .confirmation-confirm-total
          h4
            span #{__('TOTAL AMOUNT')} 
            | #{__('(Incl. VAT):')} 
            span#totalPrice #{moneyString(selected.getPrice(parcel) + (parcel.insurancePrice ? parcel.insurancePrice : 0) + selected.getDeliveryPrice(parcel))} 
            span  &euro;
        a.orange_button(onClick='javascript:confirmation();') #{__('CONFIRM')}
  // maps
  section.maps
    .maps-left#map1block
      //.wr-map
        #map1
        .maps-sign #{__('FROM: POSTBOX')}
      //.wr-map
        #map2
        .maps-sign #{__('TO:')} #{__('HOME ADRESS')}
    .maps-right#map2block
      //.wr-map
        #map3
        .maps-sign #{__('PACKAGE ROUTE')}

block script
  script(src="/vendor/react/react-with-addons.js")
  script(src="/vendor/react/react-dom.min.js")
  script(src="/js/site/view/dateblock.js")
  script(src="/js/site/view/gmap.js")
  script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA8DhuvWbZHjOZvY_nzTc3EfMFGR0vFNK8")
  script(type='text/javascript').
    if('#{delivery}' != 'home') {
      console.log('Select parcel boxes');
      var selection1 = $('#addressSelect1')[0];
      var selection2 = $('#addressSelect2')[0];
      $("#addressSelect1").selectBoxIt().data("selectBox-selectBoxIt").selectOption(1);
      $("#addressSelect2").selectBoxIt().data("selectBox-selectBoxIt").selectOption(1);
      document.fromParcelShopId = selection1.options[selection1.selectedIndex].getAttribute('parcelShopId');
      document.fromParcelShopAddress = selection1.options[selection1.selectedIndex].innerText;
      document.toParcelShopId = selection2.options[selection2.selectedIndex].getAttribute('parcelShopId');
      document.toParcelShopAddress = selection2.options[selection2.selectedIndex].innerText;
      $('#postbox')[0].checked = true;
      $('#home')[0].checked = false;
      $('#postbox2')[0].checked = true;
      $('#home2')[0].checked = false;
      selectDriver($('#driverSelection')[0]);
    }

    document.currentDriverId = '#{selected.id}';
    document.currentPrice = #{selected.getPrice(parcel) + (parcel.insurancePrice ? parcel.insurancePrice : 0)}
    document.currentDeliveryPrice = #{selected.getDeliveryPrice(parcel)};
    document.currentTotalPrice = (document.currentPrice + document.currentDeliveryPrice).toFixed(2);

    $('.pl1').mask('99.99.9999, 99.99');
    $('.pl2').mask('99.99.9999, 99.99');

    //ReactDOM.render(React.createElement(DateBlock, {pdate:'#{parcel.pickupDate}', adate:'#{parcel.arriveDate}'}), document.getElementById('dateblock'));
    $('#home').on('click', function() {
      $("#addressSelect1").selectBoxIt().data("selectBox-selectBoxIt").selectOption(0);
    });
    $('#home2').on('click', function() {
      $("#addressSelect2").selectBoxIt().data("selectBox-selectBoxIt").selectOption(0);
    });
    $('#postbox').on('click', function() {
      var selection1 = $('#addressSelect1')[0];
      var selection2 = $('#addressSelect2')[0];
      if(selection2.selectedIndex != 0)
        $('#driverSelection').selectBoxIt().data('selectBox-selectBoxIt').selectOption(0);
      if(selection1.selectedIndex == 0)
        $("#addressSelect1").selectBoxIt().data("selectBox-selectBoxIt").selectOption(1);
    });
    $('#postbox2').on('click', function() {
      var selection1 = $('#addressSelect1')[0];
      var selection2 = $('#addressSelect2')[0];
      if(selection1.selectedIndex != 0)
        $('#driverSelection').selectBoxIt().data('selectBox-selectBoxIt').selectOption(0);
      if(selection2.selectedIndex == 0)
        $("#addressSelect2").selectBoxIt().data("selectBox-selectBoxIt").selectOption(1);
    });
    $('#addressSelect1').on('change', function(event) {
      var select = $('#driverSelection')[0];
      var option = select.options[select.selectedIndex];
      var deliveryType = option.getAttribute('deliveryType');
      if(event.target.selectedIndex == 0) {
        // delivery from home address
        document.fromParcelShopId = null;
        $('#postbox')[0].checked = false;
        $('#home')[0].checked = true;
        if(deliveryType == 'postbox')
          $('#driverSelection').selectBoxIt().data('selectBox-selectBoxIt').selectOption(1);
      } else {
        // delivery from post shop
        document.fromParcelShopId = event.target.options[event.target.selectedIndex].getAttribute('parcelShopId');
        $('#postbox')[0].checked = true;
        $('#home')[0].checked = false;

        var selection2 = $('#addressSelect2')[0];
        if(selection2.selectedIndex != 0)
          $('#driverSelection').selectBoxIt().data('selectBox-selectBoxIt').selectOption(0);
      }
      selectDriver($('#driverSelection')[0]);
      document.fromParcelShopAddress = event.target.options[event.target.selectedIndex].innerText;
      if(window.marker1) {
        var coords = event.target.value.split(',');
        window.marker1.setPosition(new google.maps.LatLng(parseFloat(coords[0]), parseFloat(coords[1])));
        if(event.target.selectedIndex == 0) {
          $.post('/search/address', {address: document.fromParcelShopAddress}, function(data, status) {
            console.log('True home geo position', data);
            if(data && data.latitude && data.longitude) {
              window.marker1.setPosition(new google.maps.LatLng(data.latitude, data.longitude));
            }
          });
        }
      }
    });
    $('#addressSelect2').on('change', function(event) {
      var select = $('#driverSelection')[0];
      var option = select.options[select.selectedIndex];
      var deliveryType = option.getAttribute('deliveryType');
      if(event.target.selectedIndex == 0) {
        // delivery to home address
        document.toParcelShopId = null;
        $('#postbox2')[0].checked = false;
        $('#home2')[0].checked = true;
        if(deliveryType == 'postbox')
          $('#driverSelection').selectBoxIt().data('selectBox-selectBoxIt').selectOption(1);
      } else {
        // delivery to post shop
        document.toParcelShopId = event.target.options[event.target.selectedIndex].getAttribute('parcelShopId');
        $('#postbox2')[0].checked = true;
        $('#home2')[0].checked = false;

        var selection1 = $('#addressSelect1')[0];
        if(selection1.selectedIndex != 0)
          $('#driverSelection').selectBoxIt().data('selectBox-selectBoxIt').selectOption(0);
      }
      selectDriver($('#driverSelection')[0]);
      document.toParcelShopAddress = event.target.options[event.target.selectedIndex].innerText;
      if(window.marker2) {
        var coords = event.target.value.split(',');
        window.marker2.setPosition(new google.maps.LatLng(parseFloat(coords[0]), parseFloat(coords[1])));
        if(event.target.selectedIndex == 0) {
          $.post('/search/address', {address: document.toParcelShopAddress}, function(data, status) {
            console.log('True home geo position', data);
            if(data && data.latitude && data.longitude) {
              window.marker2.setPosition(new google.maps.LatLng(data.latitude, data.longitude));
            }
          });
        }
      }
    });
    ReactDOM.render(React.createElement(GMap, {
      labelFrom: "#{__('FROM:')}",
      labelTo: "#{__('TO:')}",
      title1: "#{__('HOME ADDRESS')}",
      title2: "#{__('HOME ADDRESS')}",
      lat1: #{parcel.fromPerson ? parcel.fromPerson.latitude : parcel.owner.latitude},
      lon1: #{parcel.fromPerson ? parcel.fromPerson.longitude : parcel.owner.longitude},
      lat2: #{parcel.toPerson ? parcel.toPerson.latitude : parcel.owner.latitude},
      lon2: #{parcel.toPerson ? parcel.toPerson.longitude : parcel.owner.longitude}}),
      document.getElementById('map1block'));
    ReactDOM.render(React.createElement(GPath, {
      labelRoute: "#{__('PACKAGE ROUTE')}",
      lat1: #{parcel.fromPerson ? parcel.fromPerson.latitude : parcel.owner.latitude},
      lon1: #{parcel.fromPerson ? parcel.fromPerson.longitude : parcel.owner.longitude},
      lat2: #{parcel.toPerson ? parcel.toPerson.latitude : parcel.owner.latitude},
      lon2: #{parcel.toPerson ? parcel.toPerson.longitude : parcel.owner.longitude},
      lat3: #{selected.latitude},
      lon3: #{selected.longitude},
      radius3: #{selected.coverageDistance}
      }),
      document.getElementById('map2block'));
    function confirmation () {
      Pace.start();
      // update parcel
      values = $('input.change_placeholder');
      var data = {};

      data.pickupDate = moment($('.pl1').attr('value'));
      if(!data.pickupDate.isValid()) {
        data.pickupDate = moment($('.pl1').attr('value'), 'DD.MM.YYYY, HH:mm');
      }
      data.arriveDate = moment($('.pl2').attr('value'));
      if(!data.arriveDate.isValid()) {
        data.arriveDate = moment($('.pl2').attr('value'), 'DD.MM.YYYY, HH:mm');
      }
      data.pickupDate = data.pickupDate.format();
      data.arriveDate = data.arriveDate.format();

      data.status = 'published';
      console.log('Data', data);
      $.post('/api/parcel/#{parcel.id}', data, function(data, status) {
        if(status != 'success') {
          console.log('Result', data, 'status', status);
          Pace.stop();
          return;
        }
        // create request
        var newRequest = {parcel: '#{parcel.id}', driver: document.currentDriverId, sender: '#{user.id}', senderAccepted: false, price: document.currentPrice, deliveryPrice: document.currentDeliveryPrice};
        if(document.fromParcelShopId) newRequest.fromParcelShop = document.fromParcelShopId;
        if(document.toParcelShopId) newRequest.toParcelShop = document.toParcelShopId;
        if(document.fromParcelShopAddress) newRequest.fromParcelShopAddress = document.fromParcelShopAddress;
        if(document.toParcelShopAddress) newRequest.toParcelShopAddress = document.toParcelShopAddress;
        if(!document.fromParcelShopId || !document.toParcelShopId) {
          newRequest.deliveryOption = 'home';
        }
        $.post('/api/request', newRequest, function(request, status) {
          if(status == 'success') {
            $.post('/api/parcel/#{parcel.id}', {request:request.id}, function(data, status) {
              if(status == 'success') {
                $.get('/accept/parcel/#{parcel.id}/carrier/'+document.currentDriverId, function(request, status) {
                  console.log('Accepting driver done', request, status);
                });
                //Pace.stop();
                location.href='/payment/'+request.id+'?m=1';
              } else {
                console.log('Parcel result', data);
                Pace.stop();
              }
            });
          } else {
            console.log('Result', request);
            Pace.stop();
          }
        });
      });
    }
    function selectDriver(select) {
      option = select.options[select.selectedIndex];
      var postboxEnabled = option.getAttribute('postbox');
      var homeaddressEnabled = option.getAttribute('homeaddress');
      var deliveryType = option.getAttribute('deliveryType');
      if(postboxEnabled) {
        $('postboxLabel').show();
        $('postboxLabel2').show();
      } else {
        $('postboxLabel').hide();
        $('postboxLabel2').hide();
      }
      if(homeaddressEnabled) {
        $('homeLabel').show();
        $('homeLabel2').show();
      } else {
        $('homeLabel').hide();
        $('homeLabel2').hide();
      }

      if(deliveryType == 'postbox') {
        var selection1 = $('#addressSelect1')[0];
        var selection2 = $('#addressSelect2')[0];
        if(selection1.selectedIndex == 0)
          $("#addressSelect1").selectBoxIt().data("selectBox-selectBoxIt").selectOption(1);
        if(selection2.selectedIndex == 0)
          $("#addressSelect2").selectBoxIt().data("selectBox-selectBoxIt").selectOption(1);
        $('#postbox')[0].checked = true;
        $('#home')[0].checked = false;
        $('#postbox2')[0].checked = true;
        $('#home2')[0].checked = false;
      } else {
        var selection1 = $('#addressSelect1')[0];
        var selection2 = $('#addressSelect2')[0];
        if(selection1.selectedIndex != 0 && selection2.selectedIndex != 0) {
          $("#addressSelect1").selectBoxIt().data("selectBox-selectBoxIt").selectOption(0);
          $("#addressSelect2").selectBoxIt().data("selectBox-selectBoxIt").selectOption(0);
          $('#postbox')[0].checked = false;
          $('#home')[0].checked = true;
          $('#postbox2')[0].checked = false;
          $('#home2')[0].checked = true;
        }
      }
      document.fromParcelShopId = selection1.options[selection1.selectedIndex].getAttribute('parcelShopId');
      document.fromParcelShopAddress = selection1.options[selection1.selectedIndex].innerText;
      document.toParcelShopId = selection2.options[selection2.selectedIndex].getAttribute('parcelShopId');
      document.toParcelShopAddress = selection2.options[selection2.selectedIndex].innerText;

      insurancePrice = parseFloat('#{parcel.insurancePrice}');
      price = parseFloat(option.getAttribute('price')) + (insurancePrice ? insurancePrice : 0);
      document.currentPrice = price;
      document.currentDeliveryPrice = parseFloat(option.getAttribute('delivery'));
      if(!document.fromParcelShopId || !document.toParcelShopId) {
        price += document.currentDeliveryPrice;
      }
      $('span#deliveryPrice').html(document.currentDeliveryPrice.toFixed(2).replace(".", ","));
      $('span#totalPrice').html(price.toFixed(2).replace(".", ","));
      document.currentDriverId = option.getAttribute('driverId');
      document.currentTotalPrice = price.toFixed(2);
    }
