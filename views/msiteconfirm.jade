extend layoutm

block header
  // header section
  section.header-section
    span.title #{user.firstname} #{user.lastname}
    .container
      ul
        li
          a(href='/price/#{parcel.id}?m=1') 1. #{__('Price offers')}
        li
          span 2. #{__('Confirmation')}
        li
          a(href='#') 3. #{__('Payment')}
        li
          a(href='/dashboard?m=1') 4. #{__('Dashboard')}

block content
  // content
  section.section
    .confirmation
      .container
        .confirmation-selected
          h3 #{__('YOU HAVE SELECTED')}
          .confirmation-select-mobile
            select.js-select(onchange='selectDriver(this)')
              each driver in drivers
                option(driverId='#{driver.id}', price='#{driver.getPrice(parcel)}') #{__('cheapest delivery')} ---  &euro;#{driver.getPrice(parcel)}
        hr
        .confirmation-delivery.plc
          h3 #{__('Departure and arrivals dates')}
          .confirmation-select-mobile
            //span.placeholder1 22.12.2015, 22:34
            //span.placeholder2 22.12.2015, 22:34
            input.change_placeholder.pl1(type='text', pattern='[0-9]*', inputmode='numeric', placeholder='#{moment().format("DD.MM.YYYY")}', value='#{moment(parcel.pickupDate).format("DD.MM.YYYY")}')
            input.change_placeholder.pl2(type='text', pattern='[0-9]*', inputmode='numeric', placeholder='#{moment().format("DD.MM.YYYY")}', value='#{moment(parcel.arriveDate).format("DD.MM.YYYY")}')
        hr
        .confirmation-departure
          h3 From:
          input#postbox(type='radio', name='adress-from', value='postbox')
          label.postbox(for='postbox') #{__('Postbox')}
          input#home-adress(type='radio', name='adress-from', value='home-adress', checked=true)
          label.home-adress(for='home-adress') #{__('Home adress')}
          //input#post-office(type='radio', name='adress-from', value='post_office')
          //label.post-office(for='post-office') #{__('Post office')}
          .form-block
            .confirmation-select-mobile
              select.js-select1#addressSelect1
                if parcel.fromPerson
                  option(value='#{parcel.fromPerson.latitude},#{parcel.fromPerson.longitude}') #{parcel.fromPersonAddress()}
                else
                  option(value='#{parcel.owner.latitude},#{parcel.owner.longitude}') #{parcel.ownerAddress()}
                each fromShop in fromShops
                  option(value='#{fromShop.latitude},#{fromShop.longitude}') #{fromShop.zipCode} #{fromShop.city} #{fromShop.street} #{fromShop.houseNo}
        .confirmation-destination
          h3 To:
          input#postbox1(type='radio', name='adress-to', value='postbox')
          label.postboxs(for='postbox1') #{__('Postbox')}
          input#home-adress1(type='radio', name='adress-to', value='home-adress', checked=true)
          label.home-adresss(for='home-adress1') #{__('Home adress')}
          //input#post-office1(type='radio', name='adress-to', value='post_office')
          //label.post-offices(for='post-office1') #{__('Post office')}
          .form-block
            .confirmation-select-mobile.confirmation-select-last
              select.js-select2#addressSelect2
                if parcel.toPerson
                  option(value='#{parcel.toPerson.latitude},#{parcel.toPerson.longitude}') #{parcel.toPersonAddress()}
                else
                  option(value='#{parcel.owner.latitude},#{parcel.owner.longitude}') #{parcel.ownerAddress()}
                each toShop in toShops
                  option(value='#{toShop.latitude},#{toShop.longitude}') #{toShop.zipCode} #{toShop.city} #{toShop.street} #{toShop.houseNo}
        hr
        .confirmation-confirm-title
          ul
            li
              | #{__('SENDING DETAILS:')}
              span #{parcel.weight}#{__('kg')}, #{parcel.width}#{__('cm')} x #{parcel.length}#{__('cm')} x #{parcel.depth}#{__('cm')}
            li
              | #{__('INSURRANCE:')}
              span #{__('Standard')} (#{__('until')} #{parcel.insurance}&euro;)
            li
              | #{__('DELIVERY OPTIONS:')}
              span +0&euro; #{__('to home adress')}
        .confirmation-confirm-total
          h4
            span #{__('TOTAL AMOUNT')} 
            | #{__('(Including VAT):')} 
            span#totalPrice #{drivers[0].getPrice(parcel) + (parcel.insurancePrice ? parcel.insurancePrice : 0)}
              span &euro;
        a.orange_button(onClick='javascript:confirmation();') #{__('CONFIRM')}
  // maps
  section.maps
    .maps-left#map1block
      //.wr-map
        #map1
        .maps-sign #{__('FROM: POSTBOX')}
      //.wr-map
        #map2
        .maps-sign #{__('TO:')} #{__('HOME ADRESS')}
    .maps-right#map2block
      //.wr-map
        #map3
        .maps-sign #{__('PACKAGE ROUTE')}

block script
  script(src="/vendor/react/react-with-addons.js")
  script(src="/vendor/react/react-dom.min.js")
  script(src="/js/site/view/dateblock.js")
  script(src="/js/site/view/gmap.js")
  script(src="https://maps.googleapis.com/maps/api/js")
  script(type='text/javascript').
    // TODO
    document.currentDriverId = '#{drivers[0].id}';
    document.currentTotalPrice = #{drivers[0].getPrice(parcel) + (parcel.insurancePrice ? parcel.insurancePrice : 0)};

    $('.pl1').mask('99.99.9999, 99.99');
    $('.pl2').mask('99.99.9999, 99.99');

    //ReactDOM.render(React.createElement(DateBlock, {pdate:'#{parcel.pickupDate}', adate:'#{parcel.arriveDate}'}), document.getElementById('dateblock'));
    $('#addressSelect1').on('change', function(event) {
      var coords = event.target.value.split(',');
      window.marker1.setPosition(new google.maps.LatLng(parseFloat(coords[0]), parseFloat(coords[1])));
    });
    $('#addressSelect2').on('change', function(event) {
      var coords = event.target.value.split(',');
      window.marker2.setPosition(new google.maps.LatLng(parseFloat(coords[0]), parseFloat(coords[1])));
    });
    ReactDOM.render(React.createElement(GMap, {
      title1: "#{__('HOME ADDRESS')}",
      title2: "#{__('HOME ADDRESS')}",
      lat1: #{parcel.fromPerson ? parcel.fromPerson.latitude : parcel.owner.latitude},
      lon1: #{parcel.fromPerson ? parcel.fromPerson.longitude : parcel.owner.longitude},
      lat2: #{parcel.toPerson ? parcel.toPerson.latitude : parcel.owner.latitude},
      lon2: #{parcel.toPerson ? parcel.toPerson.longitude : parcel.owner.longitude}}),
      document.getElementById('map1block'));
    ReactDOM.render(React.createElement(GPath, {
      lat1: #{parcel.fromPerson ? parcel.fromPerson.latitude : parcel.owner.latitude},
      lon1: #{parcel.fromPerson ? parcel.fromPerson.longitude : parcel.owner.longitude},
      lat2: #{parcel.toPerson ? parcel.toPerson.latitude : parcel.owner.latitude},
      lon2: #{parcel.toPerson ? parcel.toPerson.longitude : parcel.owner.longitude},
      lat3: #{drivers[0].latitude},
      lon3: #{drivers[0].longitude},
      radius3: #{drivers[0].coverageDistance}
      }),
      document.getElementById('map2block'));
    function confirmation () {
      // update parcel
      values = $('input.change_placeholder');
      var data = {};

      data.pickupDate = moment($('.pl1').attr('value'));
      if(!data.pickupDate.isValid()) {
        data.pickupDate = moment($('.pl1').attr('value'), 'DD.MM.YYYY, HH:mm');
      }
      data.arriveDate = moment($('.pl2').attr('value'));
      if(!data.arriveDate.isValid()) {
        data.arriveDate = moment($('.pl2').attr('value'), 'DD.MM.YYYY, HH:mm');
      }
      data.pickupDate = data.pickupDate.format();
      data.arriveDate = data.arriveDate.format();

      data.status = 'published';
      console.log('Data', data);
      $.post('/api/parcel/#{parcel.id}', data, function(data, status) {
        if(status != 'success') {
          console.log('Result', data, 'status', status);
          return;
        }
        // create request
        $.post('/api/request', {parcel: '#{parcel.id}', driver: document.currentDriverId, sender: '#{user.id}', senderAccepted: true, price: document.currentTotalPrice}, function(request, status) {
          if(status == 'success') {
            $.post('/api/parcel/#{parcel.id}', {request:request.id}, function(data, status) {
              if(status == 'success') {
                location.href='/payment/'+request.id+'?m=1';
              } else {
                console.log('Parcel result', data);
              }
            });
          } else {
            console.log('Result', request);
          }
        });
      });
    }
    function selectDriver(select) {
      option = select.options[select.selectedIndex];
      insurancePrice = parseInt('#{parcel.insurancePrice}');
      price = parseInt(option.getAttribute('price')) + (insurancePrice ? insurancePrice : 0);
      $('span#totalPrice').html(price);
      document.currentDriverId = option.getAttribute('driverId');
      document.currentTotalPrice = price;
    }

