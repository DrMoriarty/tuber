extend layoutm

block head
  link(rel="stylesheet", href="css/easy-autocomplete.min.css")
  link(rel="stylesheet", href="css/easy-autocomplete.themes.min.css")

block content
  // content
  section.section
    h1 #{__('I want to send a parcel...')}
    ul.breadcrumbs
      li #{__('You are here')}
      li
        i.fa.fa-angle-double-right
        a(href='/?m=1') #{__('Home')}
      li
        i.fa.fa-angle-double-right
        span #{__('About my parcel')}
    .container
      form.form#inputform(action='/make/parcel', method='POST')
        .form-block.bordered
          i.icons-profile
          h3 #{__('From')}
          p
            input#address1(type='checkbox', name='fromPersonProfile')
            label.map_checkbox(for='address1') #{__('Choose my profile address')}
            i.icons-arrow.fill_adress1.js-toggle_address1#address1btn
          .hidden_address1
            input#fromFirstName.minLength-3(type='text', placeholder='First name, for ex.: “George”', name='fromPerson.firstName')
            input#fromLastName.minLength-3(type='text', placeholder='Last name, for ex.: “Bohorquez”', name='fromPerson.lastName')
            input#fromAddress1.minLength-3(type='text', placeholder='Adress (street), for ex.: “Way to the ocean”', name='fromPerson.address1')
            input#fromAddress2(type='text', placeholder='Adress (number), for ex.: “777”', name='fromPerson.address2')
            input#fromZip.number.minLength-5(type='text', placeholder='Zip code (only numbers)', name='fromPerson.zip')
            input#fromCity.minLength-3(type='text', placeholder='City', name='fromPerson.city')
            input#fromCountry(type='text', placeholder='Country', name='fromPerson.country')
            input#fromPhone.number.minLength-11.maxLength-12(type='text', placeholder='Mobile phone (only numbers)', name='fromPerson.phone')
            //input#fromEmail.email(type='text', placeholder='E-mail, for ex.: “George@delti.com”', name='fromPerson.email')
          h3 #{__('To')}
          p
            input#address2(type='checkbox', name='toPersonProfile')
            label.map_checkbox(for='address2') #{__('Choose my profile address')}
            i.icons-arrow.fill_adress1.js-toggle_address2#address2btn
          .hidden_address2
            input#toFirstName.minLength-3(type='text', placeholder='First name, for ex.: “George”', name='toPerson.firstName')
            input#toLastName.minLength-3(type='text', placeholder='Last name, for ex.: “Bohorquez”', name='toPerson.lastName')
            input#toAddress1.minLength-3(type='text', placeholder='Adress (street), for ex.: “Way to the ocean”', name='toPerson.address1')
            input#toAddress2(type='text', placeholder='Adress (number), for ex.: “777”', name='toPerson.address2')
            input#toZip.number.minLength-5(type='text', placeholder='Zip code (only numbers)', name='toPerson.zip')
            input#toCity.minLength-3(type='text', placeholder='City of destination', name='toPerson.city')
            input#toCountry(type='text', placeholder='Country of destination', name='toPerson.country')
            input#toPhone.number.minLength-11.maxLength-12(type='text', placeholder='Mobile phone (only numbers)', name='toPerson.phone')
            //input#toEmail.email(type='text', placeholder='E-mail, for ex.: “George@delti.com”', name='toPerson.email')
          //input#packetshop(type='checkbox', name='usePacketshop')
          //label.packetshop(for='packetshop') #{__('To reduce costs, I am willing to drop the package in a Packetshop close to me.')}
          //a.orange_button(href='#') GO TO &quot;MY PROFILE&quot;
        .form-block.bordered
          i.icons-parcel
          h3(align='left') #{__('ABOUT MY PARCEL')}
          .form-sizes_scroll
            ul.form-sizes
              li
                span.up
                  i.fa.fa-chevron-up
                input.numbers(type='text', pattern='[0-9]*', inputmode='numeric', placeholder='0', name='weight', value='1')
                em #{__('kg')}
                span.down
                  i.fa.fa-chevron-down
                strong #{__('Weight')}
              li
                span.up
                  i.fa.fa-chevron-up
                input.numbers(type='text', pattern='[0-9]*', inputmode='numeric', placeholder='0', name='length', value='20')
                em #{__('cm')}
                span.down
                  i.fa.fa-chevron-down
                strong #{__('Length')}
              li
                span.up
                  i.fa.fa-chevron-up
                input.numbers(type='text', pattern='[0-9]*', inputmode='numeric', placeholder='0', name='width', value='5')
                em #{__('cm')}
                span.down
                  i.fa.fa-chevron-down
                strong #{__('Width')}
              li
                span.up
                  i.fa.fa-chevron-up
                input.numbers(type='text', pattern='[0-9]*', inputmode='numeric', placeholder='0', name='depth', value='5')
                em #{__('cm')}
                span.down
                  i.fa.fa-chevron-down
                strong Depth
          //input#declare(type='checkbox', name='userAgreementContent')
          //label.declare(for='declare')
            | #{__('I officially declare that non of the products transported areprohibited neither in origin country, neither in destination country. It is under my responsabili')}
        .form-block.bordered
          i.icons-timing
          h3 #{__('About the timing')}
          .confirmation-select-mobile
            //span.placeholder1 #{__('Parcel can be picked up starting')}
            //span.placeholder2 #{__('Parcel should arrive before')}
            input.pl1#pickupDate(type='datetime-local', placeholder="#{__('Parcel can be picked up starting')}")
            input.pl2#arriveDate(type='datetime-local', placeholder="#{__('Parcel should arrive before')}")
          //input#timing(type='checkbox', name='userAgreementTimes')
          //label.timing(for='timing') #{__('I am aware that the time frame influences Packet24 prices.')}
        //.form-block.bordered
          i.icons-insurrance
          h3 #{__('About insurrance')}
          input(type='text', placeholder='Packet is insured until the value XXX €', name='insurrance')
        label#addressError(style='color:red;display:none;text-align:center;') #{__('There is no such index in Germany')}
        button.orange_button #{__('Send')}
        .clear
      #fill_address1.popup_adress
        h3
          span.b-close #{__('Cancel')}
          |  #{__('Fill the adress form below')} 
          a(href='javascript:saveAddress1();') #{__('Done')}
        form.popup_address1#formAddress1
          input(type='text', placeholder='First name, for ex.: “George”', name='fromPerson.firstName')
          input(type='text', placeholder='Last name, for ex.: “Bohorquez”', name='fromPerson.lastName')
          input(type='text', placeholder='Adress (street), for ex.: “Way to the ocean”', name='fromPerson.address1')
          input(type='text', placeholder='Adress (number), for ex.: “777”', name='fromPerson.address2')
          input(type='text', placeholder='Zip Code, for ex.: “456-78”', name='fromPerson.zip')
          input(type='text', placeholder='City, for ex.: “San Francisco”', name='fromPerson.city')
          input(type='text', placeholder='Country, for ex.: “United States”', name='fromPerson.country')
          input(type='text', placeholder='Mobile phone, for ex.: “001 999 4611 8937”', name='fromPerson.phone')
          input(type='text', placeholder='E-mail, for ex.: “George@delti.com”', name='fromPerson.email')
      #fill_address2.popup_adress
        h3
          span.b-close #{__('Cancel')}
          |  #{__('Fill the adress form below')} 
          a(href='javascript:saveAddress2();') #{__('Done')}
        form.popup_address1#formAddress2
          input(type='text', placeholder='First name, for ex.: “George”', name='toPerson.firstName')
          input(type='text', placeholder='Last name, for ex.: “Bohorquez”', name='toPerson.lastName')
          input(type='text', placeholder='Adress (street), for ex.: “Way to the ocean”', name='toPerson.address1')
          input(type='text', placeholder='Adress (number), for ex.: “777”', name='toPerson.address2')
          input(type='text', placeholder='Zip Code, for ex.: “456-78”', name='toPerson.zip')
          input(type='text', placeholder='City, for ex.: “San Francisco”', name='toPerson.city')
          input(type='text', placeholder='Country, for ex.: “United States”', name='toPerson.country')
          input(type='text', placeholder='Mobile phone, for ex.: “001 999 4611 8937”', name='toPerson.phone')
          input(type='text', placeholder='E-mail, for ex.: “George@delti.com”', name='toPerson.email')

block script
  script(src="vendor/jquery/jquery.easy-autocomplete.min.js")
  script(type='text/javascript').
    $('#inputform').feelform({
      notificationType: 'okIcon, errorIcon',
      validateOnTheFly: true
    });
    var options = {
      url: "/countries_#{lang}.json",
      getValue: "name",
      list: { 
        match: {
          enabled: true
        }
      },
      theme: "square"
    };
    //$('#fromPhone').mask('9999 99999999');
    //$('#toPhone').mask('9999 99999999');
    $('#fromPhone, #toPhone').on('keyup paste', function() {
      var prevVal = $(this).val();
      prevVal = prevVal.replace(/\s/g, '')
      if (prevVal.slice(0, 3) == '+49') {
        prevVal = prevVal.substring(3);
      }
      $(this).val(prevVal);
    });
    var today = moment().format('YYYY-MM-DD[T]HH:mm:ss');
    var dlimit = moment().add(7, 'd').format('YYYY-MM-DD[T]HH:mm:ss');
    $('#pickupDate').attr('min', today);
    $('#pickupDate').attr('max', dlimit);
    $('#arriveDate').attr('min', today);
    $('#arriveDate').attr('max', dlimit);
    $("#fromCountry").easyAutocomplete(options);
    $("#toCountry").easyAutocomplete(options);
    $('#address1').on('click', function(event) {
      if(event.currentTarget.checked) {
        $('#address2').prop('checked', false);
      }
    });
    $('#address2').on('click', function(event) {
      if(event.currentTarget.checked) {
        $('#address1').prop('checked', false);
      }
    });

    $(document).keypress(function(event) {
      var keycode = (event.keyCode ? event.keyCode : event.which);
      if(keycode == '13') {
        if(window.address1Modal)
          window.address1Modal.close();
        if(window.address2Modal)
          window.address2Modal.close();
      }
    });
    function saveAddress1() {
      form = $('#formAddress1').serialize();
      console.log('Save address1', form);
      window.formAddress1 = form;
      window.address1Modal.close();
    }
    function saveAddress2() {
      form = $('#formAddress2').serialize();
      console.log('Save address2', form);
      window.formAddress2 = form;
      window.address2Modal.close();
    }
    $('#inputform').submit(function(event) {
      event.preventDefault();
      $('#pickupDate').removeClass('error');
      $('#arriveDate').removeClass('error');
      $('#address1').removeClass('error');
      $('#address2').removeClass('error');
      $('#fromFirstName').removeClass('error');
      $('#fromLastName').removeClass('error');
      $('#fromAddress1').removeClass('error');
      $('#fromAddress2').removeClass('error');
      $('#fromZip').removeClass('error');
      $('#fromCity').removeClass('error');
      $('#fromCountry').removeClass('error');
      $('#fromPhone').removeClass('error');
      $('#fromEmail').removeClass('error');

      $('#toFirstName').removeClass('error');
      $('#toLastName').removeClass('error');
      $('#toAddress1').removeClass('error');
      $('#toAddress2').removeClass('error');
      $('#toZip').removeClass('error');
      $('#toCity').removeClass('error');
      $('#toCountry').removeClass('error');
      $('#toPhone').removeClass('error');
      $('#toEmail').removeClass('error');
      $('#addressError').hide();

      regdata = $(this).serialize();

      pickupDate = moment($('#pickupDate').attr('value'))
      if(!pickupDate.isValid()) {
        pickupDate = moment($('#pickupDate').attr('value'), 'DD.MM.YYYY, HH:mm')
      }
      d1 = moment().diff(pickupDate, 'days');
      if(!pickupDate.isValid() || d1 > 0) {
        $('#pickupDate').addClass('error');
        return false;
      } else {
        regdata = regdata + '&pickupDate='+pickupDate.format();
      }
      arriveDate = moment($('#arriveDate').attr('value'))
      if(!arriveDate.isValid()) {
        arriveDate = moment($('#arriveDate').attr('value'), 'DD.MM.YYYY, HH:mm')
      }
      d2 = moment().diff(arriveDate, 'days');
      if(!arriveDate.isValid() || d2 > d1 || d2 < -30) {
        //$('#arriveDate').addClass('error');
        //return false;
      } else {
        regdata = regdata + '&arriveDate='+arriveDate.format();
      }
      $.ajax({
        type: 'POST',
        url: this.action,
        data: regdata,
        success: function(data) {
          console.log('Result', data);
          location.href = '/price/'+data.parcel+'?m=1';
        },
        error: function(err) {
          console.log("Error", err);
          if(err.responseText == 'From address error') {
            //$('#address1').addClass('error');
            $('#fromZip').addClass('error');
            $('#fromCity').addClass('error');
            $('#fromCountry').addClass('error');
            if(!$('.js-toggle_address1').hasClass('active')) {
              $('.js-toggle_address1').toggleClass('active');
              $('.hidden_address1').slideToggle('slow');
            }
            $('#addressError').show();
            $('#addressError').attr('style', 'color:red;display:block;text-align:center;');
          } else if(err.responseText == 'To address error') {
            //$('#address2').addClass('error');
            $('#toZip').addClass('error');
            $('#toCity').addClass('error');
            $('#toCountry').addClass('error');
            if(!$('.js-toggle_address2').hasClass('active')) {
              $('.js-toggle_address2').toggleClass('active');
              $('.hidden_address2').slideToggle('slow');
            }
            $('#addressError').show();
            $('#addressError').attr('style', 'color:red;display:block;text-align:center;');
          } else {
            var errMsg = JSON.parse(err.responseText);
            console.log("Error message", errMsg);
            if(errMsg.error == 'E_VALIDATION') {
              if(errMsg.model == 'Person') {
                var keys = Object.keys(errMsg.invalidAttributes);
                var fields = [];
                for(i=0; i<keys.length; i++) {
                  var key = keys[i];
                  if(key == 'address1') fields.push('Address1');
                  if(key == 'address2') fields.push('Address2');
                  if(key == 'firstname') fields.push('FirstName');
                  if(key == 'lastname') fields.push('LastName');
                  if(key == 'phone') fields.push('Phone');
                  if(key == 'email') fields.push('Email');
                }
                if(!$('#address1').prop('checked')) {
                  for(i=0; i<fields.length; i++) {
                    var fn = '#from' + fields[i];
                    $(fn).addClass('error');
                  }
                  if(!$('.js-toggle_address1').hasClass('active')) {
                    $('.js-toggle_address1').toggleClass('active');
                    $('.hidden_address1').slideToggle('slow');
                  }
                }
                if(!$('#address2').prop('checked')) {
                  for(i=0; i<fields.length; i++) {
                    var fn = '#to' + fields[i];
                    $(fn).addClass('error');
                  }
                  if(!$('.js-toggle_address2').hasClass('active')) {
                    $('.js-toggle_address2').toggleClass('active');
                    $('.hidden_address2').slideToggle('slow');
                  }
                }
              }
            }
          }
        }});
      return false;
    });
  