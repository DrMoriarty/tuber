extend layoutm-footless

block header
  // header section
  section.header-section
    span.title(style='font-size:18pt;line-height:28pt;') #{user.firstname} #{user.lastname}

block content
  // content
  section.section
    .container
      h2 Delivery confirmation:
      if parcel.toPerson
        h2 #{parcel.toPerson.firstname} #{parcel.toPerson.lastname}
      else
        h2 #{parcel.owner.firstname} #{parcel.owner.lastname}
      canvas#canvas(style='background:white;width:100%;height:200px;')
      a.orange_button(href='javascript:clearCanvas();', style='margin:8px 0 8px 0;line-height:17pt;')
        | CLEAR
      a.orange_button(href='javascript:saveCanvas();', style='margin:8px 0 8px 0;line-height:17pt;')
        | DONE

block script
  script(type='text/javascript').
    //context = $('#canvas').getContext('2d');
    var context;
    var clickX = new Array();
    var clickY = new Array();
    var clickDrag = new Array();
    var paint;
    $(document).ready(function() {
      var cnvs = document.getElementById('canvas');
      context = cnvs.getContext("2d");
      context.canvas.width = cnvs.clientWidth;
      context.canvas.height = cnvs.clientHeight;
    });
    function saveCanvas() {
      var c = document.getElementById('canvas');
      var pngData = c.toDataURL('image/png');
      $.post('/make/subscript', {parcel:'#{parcel.id}', subscript: pngData}, function(data, status) {
        if(status == 'success') {
          location.href='/dashboard';
        } else {
          console.log('Subscript result', data);
        }
      });
    }
    function clearCanvas() {
      context.clearRect(0, 0, context.canvas.width, context.canvas.height); // Clears the canvas
      clickX = new Array();
      clickY = new Array();
      clickDrag = new Array();
    }
    function redraw(){
      context.clearRect(0, 0, context.canvas.width, context.canvas.height); // Clears the canvas
  
      context.strokeStyle = "#264bdf";
      context.lineJoin = "round";
      context.lineWidth = 5;
			
      for(var i=0; i < clickX.length; i++) {		
        context.beginPath();
        if(clickDrag[i] && i){
          context.moveTo(clickX[i-1], clickY[i-1]);
        } else {
          context.moveTo(clickX[i]-1, clickY[i]);
        }
        context.lineTo(clickX[i], clickY[i]);
        context.closePath();
        context.stroke();
      }
    }
    function processTouch(e, dragging) {
      offset = $('#canvas').offset();
      var mouseX = e.pageX - offset.left;
      var mouseY = e.pageY - offset.top;
      clickX.push(mouseX);
      clickY.push(mouseY);
      clickDrag.push(dragging);
      redraw();
    }
    $('#canvas').mousedown(function(e) {
      paint = true;
      processTouch(e);
    });
    $('#canvas').mousemove(function(e) {
      if(paint){
        processTouch(e, true);
      }
    });
    $('#canvas').mouseup(function(e) {
      paint = false;
    });
    $('#canvas').mouseleave(function(e) {
      paint = false;
    });

    $('#canvas').on('touchstart', function(e) {
      paint = true;
      processTouch(e.originalEvent);
    });
    $('#canvas').on('touchmove', function(e) {
      if(paint){
        processTouch(e.originalEvent.targetTouches[0], true);
      }
    });
    $('#canvas').on('touchend', function(e) {
      paint = false;
    });
    document.ontouchmove = function(event){
      if(paint) {
        event.preventDefault();
      }
    }
