extend layoutsite

block head
  link(rel="stylesheet", href="css/easy-autocomplete.min.css")
  link(rel="stylesheet", href="css/easy-autocomplete.themes.min.css")

block content
  // content
  section.section
    h1 #{__('I want to send a parcel...')}
    ul.breadcrumbs
      li #{__('You are here')}
      li
        i.fa.fa-angle-double-right
        a(href='/') #{__('Home')}
      li
        i.fa.fa-angle-double-right
        span #{__('About my parcel')}
    .container.bordered
      form.form.js-validate(action='/make/parcel', method='POST')
        .form-block
          .left
            i.icons-profile
            //a(href='/profile') #{__('GO IN TO MY PROFILE')}
          .right
            h3 #{__('From')} 
            input#address(type='checkbox', name='fromPersonProfile')
            label(for='address') #{__('Choose my profile address')}
            br
            span #{__('or')} 
            a.more.js-toggle_address1(href='#')
              | #{__('FILL ADDRESS FORM')} 
              i +
            .hidden_address1
              input#fromFirstName.minLength-3(type='text', placeholder="#{__('First name, for ex.: “George”')}", name='fromPerson.firstName')
              input#fromLastName.minLength-3(type='text', placeholder="#{__('Last name, for ex.: “Bohorquez”')}", name='fromPerson.lastName')
              input#fromAddress1.minLength-3(type='text', placeholder="#{__('Adress (street), for ex.: “Way to the ocean”')}", name='fromPerson.address1')
              input#fromAddress2(type='text', placeholder="#{__('Adress (number), for ex.: “777”')}", name='fromPerson.address2')
              input#fromZip.number.minLength-5(type='text', placeholder="#{__('Zip code (only numbers)')}", name='fromPerson.zip')
              input#fromCity.minLength-3(type='text', placeholder="#{__('City')}", name='fromPerson.city')
              input#fromCountry(type='text', placeholder="#{__('Country')}", name='fromPerson.country')
              input#fromPhone(type='text', placeholder="#{__('Mobile phone (only numbers)')}", name='fromPerson.phone')
              //input#fromEmail.email(type='text', placeholder="#{__('E-mail, for ex.: “George@delti.com”')}", name='fromPersons.email')
            h3 #{__('To')} 
            input#address1(type='checkbox', name='toPersonProfile')
            label(for='address1') #{__('Choose my profile address')}
            br
            span #{__('or')} 
            a.more.js-toggle_address2(href='#')
              | #{__('FILL ADDRESS FORM')} 
              i +
            .hidden_address2
              input#toFirstName.minLength-3(type='text', placeholder="#{__('First name, for ex.: “George”')}", name='toPerson.firstName')
              input#toLastName.minLength-3(type='text', placeholder="#{__('Last name, for ex.: “Bohorquez”')}", name='toPerson.lastName')
              input#toAddress1.minLength-3(type='text', placeholder="#{__('Adress (street), for ex.: “Way to the ocean”')}", name='toPerson.address1')
              input#toAddress2(type='text', placeholder="#{__('Adress (number), for ex.: “777”')}", name='toPerson.address2')
              input#toZip.number.minLength-5(type='text', placeholder="#{__('Zip code (only numbers)')}", name='toPerson.zip')
              input#toCity.minLength-3(type='text', placeholder="#{__('City of destination')}", name='toPerson.city' )
              input#toCountry(type='text', placeholder="#{__('Country of destination')}", name='toPerson.country')
              input#toPhone(type='text', placeholder="#{__('Mobile phone (only numbers)')}", name='toPerson.phone')
              //input#toEmail.email(type='text', placeholder="#{__('E-mail, for ex.: “George@delti.com”')}", name='toPerson.email')
            //input#packetshop(type='checkbox', name='usePacketshop')
            //label.packetshop(for='packetshop') #{__('To reduce costs, I am willing to drop the package in a Packetshop close to me.')}
        .form-block
          .left
            i.icons-parcel
          .right
            h3(align='left') #{__('ABOUT MY PARCEL')}
            ul.form-sizes
              li
                span.up
                  i.fa.fa-chevron-up
                input.numbers(type='text', placeholder='0', name='weight', value='1')
                em #{__('kg')}
                span.down
                  i.fa.fa-chevron-down
                strong #{__('Weight')}
              li
                span.up
                  i.fa.fa-chevron-up
                input.numbers(type='text', placeholder='0', name='length', value='20')
                em #{__('cm')}
                span.down
                  i.fa.fa-chevron-down
                strong #{__('Length')}
              li
                span.up
                  i.fa.fa-chevron-up
                input.numbers(type='text', placeholder='0', name='width', value='5')
                em #{__('cm')}
                span.down
                  i.fa.fa-chevron-down
                strong #{__('Width')}
              li
                span.up
                  i.fa.fa-chevron-up
                input.numbers(type='text', placeholder='0', name='depth', value='5')
                em #{__('cm')}
                span.down
                  i.fa.fa-chevron-down
                strong #{__('Depth')}
            //input#declare(type='checkbox', name='userAgreementContent')
            //label.declare(for='declare')
              | #{__('I officially declare that non of the products transported areprohibited neither in origin country, neither in destination country. It is under my responsabili')}
        .form-block
          .left
            i.icons-timing
          .right.about
            h3 #{__('About the timing')}
            .form-datepicker
              input.time.js-datetime(type='text', placeholder='#{__("Parcel can be picked up starring")}', name='pickupDate')
              #datePicker1.form-datepicker-body.js-datetime-body.hide
                h4 #{__('Your check in Date')}
                strong.time #{__('TIME:')}
                strong.at #{__('at')}
                input.time_at(type='text', placeholder=' 14:00 ', name='pickupTime1', value='10:00')
                strong.to #{__('to')}
                input.time_to(type='text', placeholder=' 17:00 ', name='pickupTime2', value='17:00')
                em #{__('*Period must be have more than two hours.')}
            .form-datepicker
              input.time.js-datetime.time-right(type='text', placeholder='#{__("Parcel should arrived before")}', name='arriveDate')
              #datePicker2.form-datepicker-body.calendar-right.js-datetime-body.hide
                h4 #{__('Your check in Date')}
                strong.time #{__('TIME:')}
                strong.at #{__('at')}
                input.time_at(type='text', placeholder=' 15:00 ', name='arriveTime1', value='10:00')
                strong.to #{__('to')}
                input.time_to(type='text', placeholder=' 18:00 ', name='arriveTime2', value='17:00')
                em #{__('*Period must be have more than two hours.')}
            //input#timing(type='checkbox', name='userAgreementTimes')
            //label(for='timing') #{__('I am aware that the time frame influences Packet24 prices.')}
        .clear
        .form-block
          //.left
            i.icons-insurrance
          //.right.insurrance
            h3 #{__('About insurrance')}
            input.required(type='text', placeholder='Packet is insured until the value XXX €', name='insurance')
          label#addressError(style='color:red;display:none;text-align:center;') #{__('There is no such index in Germany')}
          button.orange_button #{__('Send!')}
        .clear

block script
  script(src="vendor/jquery/jquery.easy-autocomplete.min.js")
  script(type='text/javascript').
    $('.js-validate').feelform({
      notificationType: 'okIcon, errorIcon',
      validateOnTheFly: true
    });
    var options = {
      url: "/countries_#{lang}.json",
      getValue: "name",
      list: { 
        match: {
          enabled: true
        }
      },
      theme: "square"
    };
    //$('#fromPhone').mask('9999 99999999');
    //$('#toPhone').mask('9999 99999999');
    $("#fromCountry").easyAutocomplete(options);
    $("#toCountry").easyAutocomplete(options);
    $('#address').on('click', function(event) {
      if(event.currentTarget.checked) {
        $('#address1').prop('checked', false);
      }
    });
    $('#address1').on('click', function(event) {
      if(event.currentTarget.checked) {
        $('#address').prop('checked', false);
      }
    });

    $('.js-validate').submit(function() {
      $('#fromFirstName').removeClass('error');
      $('#fromLastName').removeClass('error');
      $('#fromAddress1').removeClass('error');
      $('#fromAddress2').removeClass('error');
      $('#fromZip').removeClass('error');
      $('#fromCity').removeClass('error');
      $('#fromCountry').removeClass('error');
      $('#fromPhone').removeClass('error');
      $('#fromEmail').removeClass('error');

      $('#toFirstName').removeClass('error');
      $('#toLastName').removeClass('error');
      $('#toAddress1').removeClass('error');
      $('#toAddress2').removeClass('error');
      $('#toZip').removeClass('error');
      $('#toCity').removeClass('error');
      $('#toCountry').removeClass('error');
      $('#toPhone').removeClass('error');
      $('#toEmail').removeClass('error');
      $('#addressError').hide();

      regdata = $(this).serialize();
      $.ajax({
        type: 'POST',
        url: this.action,
        data: regdata,
        success: function(data) {
          console.log('Result', data);
          location.href = '/price/'+data.parcel;
        },
        error: function(err) {
          console.log("Error", err);
          if(err.responseText == 'From address error') {
            $('#fromZip').addClass('error');
            $('#fromCity').addClass('error');
            $('#fromCountry').addClass('error');
            if(!$('.js-toggle_address1').hasClass('active')) {
              $('.js-toggle_address1').toggleClass('active');
              $('.hidden_address1').slideToggle('slow');
            }
            $('#addressError').show();
            $('#addressError').attr('style', 'color:red;display:block;text-align:center;');
          } else if(err.responseText == 'To address error') {
            $('#toZip').addClass('error');
            $('#toCity').addClass('error');
            $('#toCountry').addClass('error');
            if(!$('.js-toggle_address2').hasClass('active')) {
              $('.js-toggle_address2').toggleClass('active');
              $('.hidden_address2').slideToggle('slow');
            }
            $('#addressError').show();
            $('#addressError').attr('style', 'color:red;display:block;text-align:center;');
          } else {
            var errMsg = JSON.parse(err.responseText);
            console.log("Error message", errMsg);
            if(errMsg.error == 'E_VALIDATION') {
              if(errMsg.model == 'Person') {
                var keys = Object.keys(errMsg.invalidAttributes);
                var fields = [];
                for(i=0; i<keys.length; i++) {
                  var key = keys[i];
                  if(key == 'address1') fields.push('Address1');
                  if(key == 'address2') fields.push('Address2');
                  if(key == 'firstname') fields.push('FirstName');
                  if(key == 'lastname') fields.push('LastName');
                  if(key == 'phone') fields.push('Phone');
                  if(key == 'email') fields.push('Email');
                }
                if(!$('#address').prop('checked')) {
                  for(i=0; i<fields.length; i++) {
                    var fn = '#from' + fields[i];
                    $(fn).addClass('error');
                  }
                  if(!$('.js-toggle_address1').hasClass('active')) {
                    $('.js-toggle_address1').toggleClass('active');
                    $('.hidden_address1').slideToggle('slow');
                  }
                }
                if(!$('#address1').prop('checked')) {
                  for(i=0; i<fields.length; i++) {
                    var fn = '#to' + fields[i];
                    $(fn).addClass('error');
                  }
                  if(!$('.js-toggle_address2').hasClass('active')) {
                    $('.js-toggle_address2').toggleClass('active');
                    $('.hidden_address2').slideToggle('slow');
                  }
                }
              }
            }
          }
        }});
      return false;
    });
  